name: Deploy to PostgreSQL

on:
  push:
    branches:
      - main

jobs:
  deploy:
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install PostgreSQL client
      run: |
        # sudo apt-get update
        # sudo apt-get install -y postgresql-client
        brew update
        brew install libpq
        brew link --force libpq

    # - name: Get changed SQL scripts
    #   id: changed_scripts
    #   run: |
    #     # Check if there is more than one commit
    #     if git rev-parse HEAD^ > /dev/null 2>&1; then
    #       # If there is more than one commit, check for changes in the sql-scripts folder
    #       git diff --name-only HEAD^ HEAD ./sql-scripts/*.sql > changed_scripts.txt
    #     else
    #       # If it's the first commit, assume all scripts need to be run
    #       find ./sql-scripts/*.sql > changed_scripts.txt
    #     fi
    #     # Output the list of changed scripts
    #     cat changed_scripts.txt
        

    - name: Deploy SQL Script
      env:
        PGHOST: ${{ secrets.PGHOST }}
        PGUSER: ${{ secrets.PGUSER }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
      run: |
        # Loop through the scripts
        for script in ./sql-scripts/*.sql; do
          script_name=$(basename "$script")
          # Check if the script has already been executed
          script_executed=$(psql -h $PGHOST -U $PGUSER -d $PGDATABASE -t -c "SELECT 1 FROM executed_scripts WHERE script_name = '$script_name'")
          
          if [[ -z "$script_executed" ]]; then
            echo "Running $script_name..."
            psql -h $PGHOST -U $PGUSER -d $PGDATABASE -f "$script"
            # Log the executed script in the table
            psql -h $PGHOST -U $PGUSER -d $PGDATABASE -c "INSERT INTO executed_scripts (script_name) VALUES ('$script_name');"
          else
            echo "$script_name already executed, skipping..."
          fi
        done

    - name: Verify Deployment
      env:
        PGHOST: ${{ secrets.PGHOST }}
        PGUSER: ${{ secrets.PGUSER }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
      run: |
        echo "Verifying deployment..."
        psql -h $PGHOST -U $PGUSER -d $PGDATABASE -c "SELECT NOW();"

    - name: Log Successful Deployment
      run: echo "SQL script successfully deployed to ${{ secrets.PGDATABASE }} at ${{ secrets.PGHOST }}"
